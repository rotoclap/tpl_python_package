[tox]
envlist =
    py38
    py39
    py310
    py311
    py312
    py313
    coverage
    lint
    typing
    docs
skip_missing_interpreters = true

[testenv]
allowlist_externals = 
    mkdocs
description = run non slow unit tests
deps = 
    pytest
    coverage[toml]
commands = coverage run -m pytest {posargs} -m "not slow"

[testenv:coverage]
description = show tests coverage
deps = 
    coverage[toml]
skip_install = true
commands = 
    coverage combine
    coverage report
depends =
    py38
    py39
    py310
    py311
    py312
    py313
    slow

[testenv:docs]
description = run docs building server
deps = -r requirements/docs.txt
commands = 
    mkdocs build --clean
    mkdocs serve

[testenv:docs-deploy]
description = build docs and deploy
deps = -r requirements/docs.txt
commands = mkdocs gh-deploy --clean

[testenv:lint]
description = run linters
deps = -r requirements/lint.txt
skip_install = true
commands = 
    isort --profile black {posargs:.}
    black {posargs:.}

[testenv:release]
description = build the package and publish it to PyPI
skip_install = true
deps =
    build
    twine
pass_env =
    TWINE_PASSWORD
setenv =
    TWINE_USERNAME = {env:TWINE_USERNAME:__token__}
commands =
    python -m build
    python -m twine upload dist/*

[testenv:slow]
description = run only slow unit tests
deps = 
    pytest
    coverage[toml]
commands = coverage run -m pytest {posargs} -m slow

[testenv:typing]
description = run type checkers
deps = -r requirements/typing.txt
commands = 
    mypy src

[testenv:update-requirements]
description = generate requirements files
deps = pip-tools
skip_install = true
change_dir = requirements
commands = 
    pip-compile dev.in -q --no-strip-extras {posargs:-U}
    pip-compile docs.in -q --no-strip-extras {posargs:-U}
    pip-compile lint.in -q --no-strip-extras {posargs:-U}
    pip-compile tests.in -q --no-strip-extras {posargs:-U}
    pip-compile typing.in -q --no-strip-extras {posargs:-U}
